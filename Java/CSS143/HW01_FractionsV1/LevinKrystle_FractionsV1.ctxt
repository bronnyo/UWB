#BlueJ class context
comment0.target=LevinKrystle_FractionsV1
comment0.text=\r\n\ Questions\:\r\n\ 1.\ Can\ you\ complete\ this\ without\ using\ arrays?\ \r\n\ \ What\ is\ the\ least\ number\ of\ variables\ you\ can\ use\ to\ solve\ this\ problem?\r\n\ A.\ Essentially\ you\ could\ complete\ this\ this\ without\ the\ use\ of\ arrays,\ for\ simplicity\r\n\ \ \ \ of\ this\ task\ you\ would\ have\ to\ use\ a\ class\ otherwise\ it\ would\ be\ quite\ stenuous.\ \r\n\ \ \ \ For\ my\ program,\ 4,\ numerator,\ denominator,\ decimal\ value,\ and\ frequency.\r\n\ \ \r\n\ 2.\ Can\ you\ use\ just\ one\ array\ to\ solve\ this?\ What\ would\ the\ data\ type\ be\ of\ that\ array?\r\n\ A\:\ I\ would\ have\ to\ say\ an\ array\ of\ type\ double,\ once\ created,\ and\ sorted\ you\ could\ filter\r\n\ \ \ \ back\ through\ the\ file\ to\ find\ the\ assiciated\ fractions\ and\ frequency.\r\n\ \r\n\ 3.\ What\ does\ it\ mean\ to\ make\ a\ class\ so\ another\ class\ is\ inside\ (or\ part\ of)\ the\ first\ class,\ \r\n\ so\ that\ it\ is\ composed\ of\ other\ data\ types?\ What\ does\ "composition"\ mean\ in\ that\ case?\ \ \r\n\ How\ is\ it\ done?\r\n\ A\:\ Creating\ an\ inner\ class\ essentially\ supports\ the\ outclass\ in\ such\ a\ way\ that\ the\ inner\ class\r\n\ \ \ \ functions\ are\ specific\ to\ methods\ of\ a\ certain\ type\ of\ data.\ Moreover\ the\ innerclass\ allowes\ \r\n\ \ \ \ the\ outerclass\ to\ be\ more\ self\ contained,\ especially\ if\ the\ class\ definition\ is\ initially\ very\ \r\n\ \ \ \ short.\ the\ composition\ of\ these\ refers\ to\ the\ encapsulation\ of\ the\ data.\ the\ best\ way\ to\ do\ this\r\n\ \ \ \ is\ to\ mark\ them\ as\ private.\r\n\ \r\n\ 4.\ What\ are\ some\ solutions\ to\ the\ reduction\ problem\ other\ than\ Euclid's\ GCD\ algorithm?\r\n\ A\:\ you\ could\ create\ a\ decimal\ value\ and\ then\ send\ it\ into\ a\ for\ loop\ to\ muliply\ it\ by\ i,\r\n\ \ \ for\ every\ i\ >\ 1\ until\ an\ integer\ is\ reached\ and\ then\ create\ the\ fraction\ such\ that\r\n\ \ \ result+"/"+i.\r\n\ \ \r\n\ Program\ Overview\:\r\n\ Reads\ file\ containing\ a\ list\ of\ fractions\ \r\n\ of\ which\ are\ read\ in\ as\ string\ and\ then\ \r\n\ converted\ to\ variables\ of\ the\ types\ int.\ \r\n\ \r\n\ The\ fractions\ are\ then\ converted\ to\ type\ double\r\n\ in\ a\ new\ array,\ of\ which\ is\ used\ to\ determine\r\n\ the\ frequency\ of\ each\ fraction\ thereof.\r\n\ \r\n\ the\ resulting\ fractions\ and\ their\ frequency\ are\ \r\n\ then\ displayed\ to\ the\ terminal\ window\ for\ the\r\n\ user\ to\ analyze.\r\n\ \r\n\ @author\ (Krystle\ S\ Levin)\r\n\ @version\ (January\ 11th,\ 2018)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=decimals\ size
comment2.target=double[][]\ decimalFrequency(double[],\ int)
comment2.text=\r\n\ decimalFrequency\ takes\ in\ a\ 1\ dimmentional\ array\ that\ contains\ the\r\n\ decimal\ results\ of\ the\ recorded\ numerator\ divided\ by\ the\ denominator\r\n\ of\ which\ is\ then\ copied\ into\ a\ new\ array\ of\ the\ proper\ size\ that\ was\r\n\ recorded\ when\ the\ original\ decimal\ array\ was\ created.\r\n\ The\ new\ array\ is\ then\ sorted\ and\ checked\ for\ frequency\r\n\ A\ two\ dimentional\ array\ containing\ the\ decimal\ value\ and\ its\r\n\ coordinating\ frequency\ is\ then\ returned\ to\ main.\r\n
comment3.params=fractions\ decimals
comment3.target=void\ compareAndPrint(int[][],\ double[][])
comment3.text=\r\n\ Compare\ and\ print\ takes\ in\ the\ two\ dimentional\ array\ generated\ from\ the\ file\r\n\ as\ well\ as\ the\ two\ dimentional\ frequency\ array\ generated\ by\ decimalFrequency\r\n\ compares\ again\ the\ numerator/denominator\ to\ see\ if\ it\ equals\ the\ comparing\r\n\ decimal.\ It\ then\ prints\ the\ readable\ fraction\ and\ the\ correlating\ frequency\r\n\ as\ stored\ in\ the\ decimalfrequency\ array.\r\n
numComments=4
