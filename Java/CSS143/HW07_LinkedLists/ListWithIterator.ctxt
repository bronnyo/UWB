#BlueJ class context
comment0.target=ListWithIterator
comment0.text=\r\n\ Write\ a\ description\ of\ class\ ListWithIterator\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=ListWithIterator()
comment10.params=
comment10.target=int\ size()
comment10.text=\r\n\ Method\:\ size()\r\n\ returns\ how\ many\ nodes\ construct\ the\ list\r\n
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\r\n\ Method\:\ isEmpty()\r\n\ Pre-Condition\:\ N/A\r\n\ postCondition\:\ will\ return\ false\ if\ head\ contains\ a\ value\ for\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ false\ if\ the\ head\ item\ is\ null.\r\n
comment12.params=other
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=\r\n\ Method\:\ equals()\r\n\ pre-condition\:\ The\ other\ Object\ is\ of\ the\ type\ list\ and\ contains\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ same\ elements\ in\ the\ same\ order\r\n\ postcondition\:\ Wil\ return\ true\ if\ preconditions\ are\ met\ and\ false\ otherwise.\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Method\:\ toString()\r\n\ pre-condition\:\ the\ list\ is\ non-empty\r\n\ postcondition\:\ a\ String\ containing\ all\ elements\ of\ the\ list\ will\ be\ returned.\r\n
comment2.params=other
comment2.target=ListWithIterator(ListWithIterator)
comment3.params=
comment3.target=void\ restart()
comment4.params=data\ index
comment4.target=void\ insert(java.lang.Object,\ int)
comment4.text=\r\n\ Method\:\ Insert\r\n\ \ Pre-Condition\:\ The\ list-length\ is\ greater\ than\ the\ desired\ index\ in\ which\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ node\ is\ to\ be\ inserted\ at\r\n\ Post-Condition\:\ following\ a\ node\ will\ be\ added\ at\ the\ indicated\ index\r\n
comment5.params=next
comment5.target=void\ append(java.lang.Object)
comment5.text=\r\n\ Method\:\ append\r\n\ \ Pre-Condition\:\ Next\ is\ not\ null\r\n\ Post-Condition\:\ The\ object\ next\ will\ be\ added\ to\ the\ end\ of\ the\ list\r\n
comment6.params=index
comment6.target=void\ delete(int)
comment6.text=\r\n\ Method\:\ delete()\r\n\ \ Pre-Condition\:\ The\ ListWithIterator\ is\ non-empty\ &&\ the\ specified\ index\ does\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ not\ exceed\ the\ size\ of\ the\ list.\r\n\ Post-Condition\:\ The\ item\ at\ the\ specified\ index\ will\ be\ deleated\r\n
comment7.params=index
comment7.target=java.lang.Object\ remove(int)
comment7.text=\r\n\ Method\:\ Remove\r\n\ \ Pre-Condition\:\ The\ specified\ index\ is\ not\ null,\ that\ is\ an\ element\ exists\ at\ position\ index\r\n\ Post-Condition\:\ The\ node\ at\ the\ specified\ index\ will\ be\ removed,\ and\ return\ the\ data\ thereof.\r\n
comment8.params=index
comment8.target=java.lang.Object\ atIndex(int)
comment8.text=\r\n\ Method\:\ atIndex()\r\n\ pre-condition\:\ the\ list\ is\ not\ empty\ and\ the\ index\ does\ not\ exceed\ the\ size\ of\ the\ list\r\n\ postcondition\:\ Will\ return\ the\ bject\ at\ the\ specified\ index\r\n
comment9.params=target
comment9.target=int\ indexOf(java.lang.Object)
comment9.text=\r\n\ Method\:\ indexOf()\r\n\ pre-condition\:\ The\ target\ object\ exists\ in\ the\ list,\ ie\ the\ list\ is\ not\ empty\r\n\ postcondition\:\ will\ return\ the\ index\ of\ the\ target\ object\ is\ it\ exists,\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ will\ return\ -1\ otherwise\r\n
numComments=14
