#BlueJ class context
comment0.target=PizzaManager
comment0.text=\ PizzaManager\ Skeleton\ File\r\n\ \ CSS\ 162,\ Final\ Project\r\n\ \r\n\ \ This\ class\ is\ a\ starting\ point\ for\ your\ final\ project\ and\ is\ incomplete.\r\n\ \ Note\ that\ if\ there\ are\ any\ inconsistencies\ between\ this\ skeleton\ and\r\n\ \ the\ assignment\ description,\ the\ assignment\ description\ controls.\r\n\ \r\n\ \ Author\:\ Rob\ Nash\ with\ edits\ by\ Johnny\ Lin\ \ [\ and\ Krystle\ S\ Levin\ (3/9/2018)\ ]\r\n
comment1.params=
comment1.target=void\ start()
comment1.text=\ \r\n\ The\ console\ interface\ is\ defined\ in\ the\ start\ method\ \r\n\ You\ can\ exit\ or\ extend\ the\ code\ below\ to\ accomplish\ all\ of\ \r\n\ the\ outcomes\ defined\ in\ the\ homework\ document\r\n
comment10.params=
comment10.target=void\ displayInstructions()
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\r\n\ Notice\ the\ one-line\ main\ function.\r\n
comment2.params=keys
comment2.target=void\ eatSomePizza(java.util.Scanner)
comment2.text=\r\n\ EatSomePizza\ subtracts\ a\ specified\ fractional\ amount\ from\ a\ random\ pizza\r\n
comment3.params=
comment3.target=void\ addRandomPizza()
comment3.text=\r\n\ addRandomPizza\ auto\ generates\ a\ random\ pizza\ and\ add\ it\ to\ the\ pizzaStock\r\n\ every\ pizza\ has\ a\ sauce\ base\ and\ cheese\ but\ added\ ingredients\ may\ differ\r\n\ in\ addition\ to\ their\ cost\ and\ calorie\ count.\ all\ pizzas\ will\ be\ of\ the\r\n\ same\ initial\ area\ size.\r\n
comment4.params=
comment4.target=void\ displayAllPizzas()
comment4.text=\r\n\ displayAllPizzas\ displays\ all\ pizzas\ and\ their\ contents\r\n
comment5.params=
comment5.target=void\ sortByPrice()
comment5.text=\r\n\ sortByPrice\r\n\ Pre-Condition\:\ pizzaStock\ is\ not\ null\ and\ all\ pizzas\ have\ prices\r\n\ PostCondition\:\ all\ the\ pizzas\ in\ the\ list\ will\ be\ sorted\ accoding\ to\ price\r\n
comment6.params=
comment6.target=void\ sortBySize()
comment6.text=\r\n\ sortBySize\r\n\ Pre-Condition\:\ pizzaStock\ is\ not\ null\ and\ all\ pizzas\ have\ sizes\r\n\ PostCondition\:\ all\ the\ pizzas\ in\ the\ list\ will\ be\ sorted\ accoding\ to\ remaining\ area\r\n
comment7.params=
comment7.target=void\ sortByCalories()
comment7.text=\r\n\ sortByCalories\r\n\ Pre-Condition\:\ pizzaStock\ is\ not\ null\ and\ all\ pizzas\ have\ calories\r\n\ PostCondition\:\ all\ the\ pizzas\ in\ the\ list\ will\ be\ sorted\ accoding\ to\ thie\ total\ calories\r\n
comment8.params=cals
comment8.target=void\ binarySearchByCalories(int)
comment8.text=\r\n\ BinarySearchByCalories\r\n\ Pre-Condition\:\ pizzaStock\ is\ not\ null\ and\ in\ pizzaStock\ there\ exists\ a\ pizza\ with\ the\ desired\ calories\r\n\ PostCondition\:\ all\ pizzas\ with\ the\ desired\ number\ of\ calories\ will\ be\ listed\r\n
comment9.params=cals\ lowIndex\ highIndex
comment9.target=int\ recSearch(int,\ int,\ int)
comment9.text=\r\n\ reSearch\ is\ a\ helper\ function\ to\ the\ binarySearchByCalories\ method\ above.\r\n
numComments=12
