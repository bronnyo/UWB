#BlueJ class context
comment0.target=Money
comment0.text=\r\n\ Money\ class\ holds\ and\ stores\ the\ Dollars\ and\ Cents\ of\ a\ monetary\ value.\ \r\n\ The\ monetary\ value\ can\ then\ be\ accessed\ and\ modified\r\n\ using\ the\ specificified\ methods\ there\ of.\r\n\r\n\ @author\ (Krystle\ S\ Levin)\r\n\ @version\ (February\ 1st,\ 2018)\r\n
comment1.params=
comment1.target=Money()
comment10.params=dollars
comment10.target=void\ add(int)
comment10.text=\r\n\ Pre-Condition\:\ When\ the\ int\ dollar\ parameter\ is\ added\ to\ the\ dollar\ instance\ variable,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ their\ sum\ is\ not\ less\ than\ 0.\r\n\ Post-Condition\:\ The\ value\ of\ the\ dollar\ instance\ variable\ will\ update\ to\ the\ sum\ of\ itself\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ the\ given\ value\ of\ the\ parameter\r\n
comment11.params=dollars\ cents
comment11.target=void\ add(int,\ int)
comment11.text=\r\n\ Pre-Condition\:\ When\ the\ int\ dollar\ parameter\ is\ added\ to\ the\ dollar\ instance\ variable,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ their\ sum\ is\ not\ less\ than\ 0,\ with\ similar\ conditions\ for\ cents\ and\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ total\ possible\ value\ of\ dollars\ and\ cents.\r\n\ Post-Condition\:\ The\ value\ of\ the\ dollar\ and\ cents\ instance\ variables\ will\ update\ to\ the\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sum\ of\ themselves\ and\ the\ given\ value\ of\ the\ according\ parameters.\r\n
comment12.params=other
comment12.target=void\ add(Money)
comment12.text=\r\n\ Pre-conditions\:\ N/A\ since\ they\ should\ have\ been\ met\ in\ Money\ other.\r\n\ Post-Conditions\:\ Dollars\ and\ cents\ of\ Money\ Other\ are\ allocated\ to\ \r\n\ dollars\ and\ cents\ of\ this\ money\ class\ object.\r\n
comment13.params=amount
comment13.target=void\ add(double)
comment13.text=\r\n\ Pre-Condition\:\ The\ amount\ is\ a\ positive\ value\ or\ if\ amount\ is\ a\ negative\ value,\ \r\n\ the\ magnitude\ is\ less\ than\ or\ equal\ to\ the\ total\ amount.\ \r\n\ \r\n\ Post-Condition\:\ If\ the\ above\ condition\ is\ met\ the\ amount\ will\ be\ allocated\ accordingly\r\n\ to\ the\ dollars\ and\ cents\ instance\ variables.\ If\ pre-condition\ is\ violated\ dollars\ and\r\n\ cents\ will\ be\ set\ to\ 0.\r\n\ \r\n
comment14.params=o
comment14.target=boolean\ equals(java.lang.Object)
comment14.text=\r\n\ \ Pre-Condition\:\ the\ object\ being\ compared\ in\ equals()\ is\ of\ the\ class\ Money\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ the\ values\ of\ their\ instance\ variables\ are\ equal.\r\n\ Post-Condition\:\ If\ this\ criteria\ is\ met\ equals()\ will\ return\ True.\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ toString\ complies\ the\ instance\ variables\ of\ the\ class\ into\ a\ single\ string\ value\ which\ \r\n\ is\ then\ returned\ to\ the\ calling\ location.\ There\ are\ no\ pre-conditions\ for\ this\ method.\r\n
comment16.params=
comment16.target=double\ getMoney()
comment16.text=\r\n\ The\ following\ methods\ are\ "getter\ methods"\ for\ retreiving\ data\ held\r\n\ in\ the\ class\ instance\ variables\ and\ return\ values\ accordingly.\r\n\ There\ are\ no\ pre-conditions\ for\ these\ methods.\r\n
comment17.params=
comment17.target=int\ getDollars()
comment18.params=
comment18.target=int\ getCents()
comment19.params=
comment19.target=Money\ clone()
comment19.text=\r\n\ Method\:\ clone()\r\n\ Returns\ a\ copy\ of\ this\ Money\ to\ wherever\ it\ is\ being\ called.\r\n
comment2.params=dollars
comment2.target=Money(int)
comment20.params=other
comment20.target=int\ compareTo(java.lang.Object)
comment20.text=\r\n\ CompareTo\r\n\ PreCondition\:\ other\ money\ is\ not\ null\r\n\ Postcondition\:\ will\ return\ -1\ if\ other\ money\ is\ less\ than\ this\ money\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ will\ return\ 1\ if\ other\ money\ is\ greater\ than\ this\ money\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ will\ return\ 0\ if\ other\ money\ equals\ this\ money\r\n
comment3.params=dollars\ cents
comment3.target=Money(int,\ int)
comment4.params=other
comment4.target=Money(Money)
comment5.params=amount
comment5.target=Money(double)
comment6.params=dollars\ cents
comment6.target=void\ setMoney(int,\ int)
comment6.text=\r\n\ Pre-Condition\:\ Neither\ of\ the\ Dollars\ or\ Cents\ parameters\ are\ negative.\r\n\ Post-Condition\:\ The\ parameter\ values\ of\ Dollars\ and\ Cents\ will\ sent\ to\ set\ methods\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ To\ be\ checked\ be\ set\ to\ the\ instace\ variables.\r\n
comment7.params=amount
comment7.target=void\ setMoney(double)
comment7.text=\r\n\ Pre-Condition\:\ The\ double\ amount\ parameter\ is\ not\ negative.\r\n\ Post-Condition\:\ The\ value\ of\ the\ amount\ parameter\ will\ be\ split\ and\ properly\ allocated\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ Dollars\ and\ Cents\ instance\ variables\ accordingly.\r\n
comment8.params=dollars
comment8.target=void\ setDollars(int)
comment8.text=\r\n\ Pre-Condition\:\ The\ int\ Dollar\ parameter\ is\ not\ negative.\r\n\ Post-Condition\:\ The\ value\ of\ the\ dollar\ parameter\ will\ be\ properly\ allocated\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ Dollar\ instance\ variable.\r\n
comment9.params=cents
comment9.target=void\ setCents(int)
comment9.text=\r\n\ Pre-Condition\:\ The\ int\ Dollar\ parameter\ is\ not\ negative.\r\n\ Post-Condition\:\ The\ value\ of\ the\ dollar\ parameter\ will\ be\ properly\ allocated\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ Dollar\ instance\ variable.\r\n
numComments=21
